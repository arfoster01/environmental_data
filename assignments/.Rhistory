install.packages("rmarkdown")
---
title: "R Markdown Documents - Part 1"
install.packages("rmarkdown")
---
title: "R Markdown Documents - Part 1"
-
title: "R Markdown Documents - Part 1"
title: "R Markdown Documents - Part 1"
---
title: "R Markdown Documents - Part 1"
image: ![](path/to/smallorb.png)
## Header 2
#title: "R Markdown Documents - Part 1"
---
#title: "R Markdown Documents - Part 1"
#subtitle: “Analysis of Environmental Data”
#author:Abby Foster
#output: html_document
#toc: true
#toc_float: true
#toc_collapsed: true
---
---
#title: "R Markdown Documents - Part 1"
#subtitle: “Analysis of Environmental Data”
#author:Abby Foster
#output: html_document
#toc: true
#toc_float: true
#toc_collapsed: true
---
#image: ![](path/to/smallorb.png)
---
title: "R Markdown Documents - Part 1"
create_and_print_vec= function(n, min=1, max= 10)
{
vec_1 = sample(1:n, n, replace = TRUE)
vec_1
for(i in 1:n)
{  print(paste("The element of vec_1 at index", 1:n, "is", vec_1))
}
}
View(create_and_print_vec)
create_and_print_vec= function(n, min=1, max= 10)
{
vec_1 = sample(1:n, n, replace = TRUE)
vec_1
for(i in 1:n)
{  print(paste("The element of vec_1 at index", 1:n, "is", vec_1))
}
}
create_and_print_vec(10, 4, 30)
create_and_print_vec(20)
create_and_print_vec= function(n, min=1, max= 10)
{
vec_1 = sample(1:n, n, replace = TRUE)
vec_1
for(i in vec_1)
{  print(paste("The element of vec_1 at index", 1:n, "is", vec_1))
}
}
# View(create_and_print_vec)
create_and_print_vec(20)
create_and_print_vec= function(n, min=1, max= 10)
{
vec_1 = sample(1:n, n, replace = TRUE)
vec_1
for(i in vec_1)
{  print(paste("The element of vec_1 at index", 1:n, "is", vec_1))
break }
}
# View(create_and_print_vec)
create_and_print_vec(20)
n= 17
vec_1 = sample(1:10, n, replace = TRUE)
vec_1
for(i in 1:n)
{  print(paste("The element of vec_1 at index", 1:n, "is", vec_1))
break
}
pbinom(4, 6, 0.66, lower.tail= FALSE)
pbinom(4, 6, 0.67, lower.tail= FALSE)
pbinom(4, 6, 0.67, lower.tail= FALSE)
x_bin = 0:6
y_bin_2 = dbinom(x_bin, size = 6, prob = 0.67)
y_bin_2 = dbinom(x_bin, size = 6, prob = 0.67)
pbinom(4, 6, 0.67, lower.tail= TRUE)
pbinom(4, 6, 0.67, lower.tail= FALSE)
sd(2, na.rm = FALSE)
sd(2, na.rm = FALSE)
sd(2, na.rm = TRUE)
sd(1, na.rm = FALSE)
pnorm(1, 0, 1 , lower.tail=TRUE)
pnorm(2, 0, 1, lower.tail=TRUE)- pnorm(1, 0, 1, lower.tail=FALSE)
pnorm(2, 0, 1, lower.tail=FALSE)- pnorm(1, 0, 1, lower.tail=TRUE)
pnorm(2, 0, 1, lower.tail=TRUE)- pnorm(1, 0, 1, lower.tail=TRUE)
n = 1000
x = seq(from = -6, to = 6, length.out = n)
y = dnorm(x, mean = 0, sd = 1)
plot(y ~ x, type = "l",
ylab = "Probability Density")
n = 1000
x = seq(from = -6, to = 6, length.out = n)
y = dnorm(x, mean = 0, sd = 1)
plot(y ~ x, type = "l",
ylab = "Probability Density",
main= "PDF Plot")
n = 1000
x = seq(from = -6, to = 6, length.out = n)
y = dnorm(x, mean = 0, sd = 1)
y= dnorm(x, mean= 1, sd=1, add=TRUE)
y = dnorm(x, mean = 0, sd = 1)
y= dnorm(x, mean= 0, sd=2)
y= dnorm(x, mean=-2, sd=1)
n = 1000
x = seq(from = -6, to = 6, length.out = n)
y = dnorm(x, mean = 0, sd = 1)
y= dnorm(x, mean= 0, sd=2)
y= dnorm(x, mean=-2, sd=1)
plot(y ~ x, type = "l",
ylab = "Probability Density",
main= "PDF Plot")
n = 1000
x = seq(from = -6, to = 6, length.out = n)
y = dnorm(x, mean = 0, sd = 1)
y= dnorm(x, mean= 0, sd=2)
y= dnorm(x, mean=-2, sd=1)
plot(y ~ x, type = "l",
ylab = "Probability Density",
main= "PDF Plot",
add=TRUE)
n = 1000
x = seq(from = -6, to = 6, length.out = n)
y = dnorm(x, mean = 0, sd = 1)
plot(y ~ x, type = "l",
ylab = "Probability Density",
main= "PDF Plot",
add=TRUE)
n = 1000
x = seq(from = -6, to = 6, length.out = n)
y = dnorm(x, mean = 0, sd = 1)
plot(y ~ x, type = "l",
ylab = "Probability Density",
main= "PDF Plot",
add=FALSE
)
n = 1000
x = seq(from = -6, to = 6, length.out = n)
y = dnorm(x, mean = 0, sd = 1)
plot(y ~ x, type = "l",
ylab = "Probability Density",
main= "PDF Plot",
)
n = 13
# Create a vector of x-values from -4 to 4:
x = seq(from = -6, to = 6, length.out = n)
# Create the corresponding y-values:
y = dnorm(x, mean = 0, sd = 1)
# plot!
plot(y ~ x, type = "l")
# How many points?
n = 1000
# Create a vector of x-values from -4 to 4:
x = seq(from = -6, to = 6, length.out = n)
# Create the corresponding y-values:
y = dnorm(x, mean = 0, sd = 1)
# plot!
plot(y ~ x, type = "l", ylab = "Probability Density")
y_2 = dnorm(x, mean = 0, sd = 2)
plot(y ~ x, type = "l", ylab = "Probability Density")
points(y_2 ~ x, type = "l", lty  = 2)
z_3 = dnorm(x, mean = -2, sd = 1)
plot(z ~ x, type = "l", ylab = "Probability Density")
plot(y ~ x, type = "l", ylab = "Probability Density")
y_2 = dnorm(x, mean = 0, sd = 2)
plot(y ~ x, type = "l", ylab = "Probability Density")
points(y_2 ~ x, type = "l", lty  = 2)
z_3 = dnorm(x, mean = -2, sd = 1)
plot(z ~ x, type = "l", ylab = "Probability Density")
n = 1000
# Create a vector of x-values from -4 to 4:
x = seq(from = -6, to = 6, length.out = n)
# Create the corresponding y-values:
y = dnorm(x, mean = 0, sd = 1)
# plot!
plot(y ~ x, type = "l", ylab = "Probability Density")
y_2 = dnorm(x, mean = 0, sd = 2)
plot(y ~ x, type = "l", ylab = "Probability Density")
points(y_2 ~ x, type = "l", lty  = 2)
z_3 = dnorm(x, mean = -2, sd = 1)
plot(z ~ x, type = "l", ylab = "Probability Density")
n = 1000
x = seq(from = -6, to = 6, length.out = n)
y = dnorm(x, mean = 0, sd = 1)
# plot!
plot(y ~ x, type = "l", ylab = "Probability Density")
y_2 = dnorm(x, mean = 0, sd = 2)
plot(y ~ x, type = "l", ylab = "Probability Density")
points(y_2 ~ x, type = "l", lty  = 2)
z_3 = dnorm(x, mean = -2, sd = 1)
plot(z ~ x, type = "l", ylab = "Probability Density")
n = 13
x = seq(from = -6, to = 6, length.out = n)
y = dnorm(x, mean = 0, sd = 1)
plot(y ~ x, type = "l")
n = 1000
x = seq(from = -6, to = 6, length.out = n)
y = dnorm(x, mean = 0, sd = 1)
# plot!
plot(y ~ x, type = "l", ylab = "Probability Density")
y_2 = dnorm(x, mean = 0, sd = 2)
plot(y ~ x, type = "l", ylab = "Probability Density")
points(y_2 ~ x, type = "l", lty  = 2)
z_3 = dnorm(x, mean = -2, sd = 1)
plot(z ~ x, type = "l", ylab = "Probability Density")
n = 1000
x = seq(from = -6, to = 6, length.out = n)
y = dnorm(x, mean = 0, sd = 1)
# plot!
plot(y ~ x, type = "l", ylab = "Probability Density")
y_2 = dnorm(x, mean = 0, sd = 2)
plot(y ~ x, type = "l", ylab = "Probability Density")
points(y_2 ~ x, type = "l", lty  = 2)
z_3 = dnorm(x, mean = -2, sd = 1)
plot(z ~ x, type = "l", ylab = "Probability Density")
z_3 = dnorm(x, mean = -2, sd = 1)
plot(z ~ x, type = "l", ylab = "Probability Density")
plot(y ~ x, type = "l", ylab = "Probability Density")
y_2 = dnorm(x, mean = 0, sd = 2)
plot(y ~ x, type = "l", ylab = "Probability Density")
points(y_2 ~ x, type = "l", lty  = 2)
z_3 = dnorm(x, mean = -2, sd = 1)
plot(z_3 ~ x, type = "l", ylab = "Probability Density")
points(z_3 ~ x, type = "l", lty  = 3)
n = 1000
x = seq(from = -6, to = 6, length.out = n)
y = dnorm(x, mean = 0, sd = 1)
# plot!
plot(y ~ x, type = "l", ylab = "Probability Density")
y_2 = dnorm(x, mean = 0, sd = 2)
plot(y ~ x, type = "l", ylab = "Probability Density")
points(y_2 ~ x, type = "l", lty  = 2)
z_3 = dnorm(x, mean = -2, sd = 1)
plot(z_3 ~ x, type = "l", ylab = "Probability Density")
points(z_3 ~ x, type = "l", lty  = 3)
# How many points?
n = 13
# Create a vector of x-values from -4 to 4:
x = seq(from = -6, to = 6, length.out = n)
# Create the corresponding y-values:
y = dnorm(x, mean = 0, sd = 1)
# plot!
plot(y ~ x, type = "l")
# How many points?
n = 1000
# Create a vector of x-values from -4 to 4:
x = seq(from = -6, to = 6, length.out = n)
# Create the corresponding y-values:
y = dnorm(x, mean = 0, sd = 1)
# plot!
plot(y ~ x, type = "l", ylab = "Probability Density")
y_2 = dnorm(x, mean = 0, sd = 2)
plot(y ~ x, type = "l", ylab = "Probability Density")
points(y_2 ~ x, type = "l", lty  = 2)
z_3 = dnorm(x, mean = -2, sd = 1)
plot(z ~ x, type = "l", ylab = "Probability Density")
# How many points?
n = 13
# Create a vector of x-values from -4 to 4:
x = seq(from = -6, to = 6, length.out = n)
# Create the corresponding y-values:
y = dnorm(x, mean = 0, sd = 1)
# plot!
plot(y ~ x, type = "l")
# How many points?
n = 1000
# Create a vector of x-values from -4 to 4:
x = seq(from = -6, to = 6, length.out = n)
# Create the corresponding y-values:
y = dnorm(x, mean = 0, sd = 1)
# plot!
plot(y ~ x, type = "l", ylab = "Probability Density")
y_2 = dnorm(x, mean = 0, sd = 2)
plot(y ~ x, type = "l", ylab = "Probability Density")
points(y_2 ~ x, type = "l", lty  = 2)
z_3 = dnorm(x, mean = -2, sd = 1)
plot(z_3 ~ x, type = "l", ylab = "Probability Density")
points(z_3 ~ x, type = "l", lty  = 3)
n = 13
# Create a vector of x-values from -4 to 4:
x = seq(from = -6, to = 6, length.out = n)
# Create the corresponding y-values:
y = dnorm(x, mean = 0, sd = 1)
# plot!
plot(y ~ x, type = "l")
# How many points?
n = 1000
# Create a vector of x-values from -4 to 4:
x = seq(from = -6, to = 6, length.out = n)
# Create the corresponding y-values:
y = dnorm(x, mean = 0, sd = 1)
# plot!
plot(y ~ x, type = "l", ylab = "Probability Density")
y_2 = dnorm(x, mean = 0, sd = 2)
plot(y ~ x, type = "l", ylab = "Probability Density")
points(y_2 ~ x, type = "l", lty  = 2)
z_3 = dnorm(x, mean = -2, sd = 1)
plot(z ~ x, type = "l", ylab = "Probability Density")
n = 13
# Create a vector of x-values from -4 to 4:
x = seq(from = -6, to = 6, length.out = n)
# Create the corresponding y-values:
y = dnorm(x, mean = 0, sd = 1)
# plot!
plot(y ~ x, type = "l")
# How many points?
n = 1000
# Create a vector of x-values from -4 to 4:
x = seq(from = -6, to = 6, length.out = n)
# Create the corresponding y-values:
y = dnorm(x, mean = 0, sd = 1)
# plot!
plot(y ~ x, type = "l", ylab = "Probability Density")
y_2 = dnorm(x, mean = 0, sd = 2)
plot(y ~ x, type = "l", ylab = "Probability Density")
points(y_2 ~ x, type = "l", lty  = 2)
z_3 = dnorm(x, mean = -2, sd = 1)
plot(y ~ x, type = "l", ylab = "Probability Density")
points(z_3 ~ x, type = "l", lty  = 3)
plot(y ~ x, type = "l", ylab = "Probability Density")
y_2 = dnorm(x, mean = 0, sd = 2)
plot(y ~ x, type = "l", ylab = "Probability Density")
points(y_2 ~ x, type = "l", lty  = 2)
z_3 = dnorm(x, mean = -2, sd = 1)
plot(z ~ x, type = "l", ylab = "Probability Density")
plot(y ~ x, type = "l", ylab = "Probability Density")
y_2 = dnorm(x, mean = 0, sd = 2)
plot(y ~ x, type = "l", ylab = "Probability Density")
points(y_2 ~ x, type = "l", lty  = 2)
z_3 = dnorm(x, mean = -2, sd = 1)
plot(y ~ x, type = "l", ylab = "Probability Density")
y_2 = dnorm(x, mean = 0, sd = 2)
plot(y ~ x, type = "l", ylab = "Probability Density")
points(y_2 ~ x, type = "l", lty  = 2)
z_3 = dnorm(x, mean = -2, sd = 1)
plot(z ~ x, type = "l", ylab = "Probability Density")
rbinom(2, 6, 0.368)
sum(log(rbinom(2, 6, 0.368)))
log(rbinom(2, 6, 0.368)
log(rbinom(2, 6, 0.368)
sum(log(rbinom(2, 6, 0.368)))
sum(log(rbinom(2, 6, 0.368)))
sum(log(rbinom(2, 6, 0.368)))
rbinom(2, 6, 0.368)
rbinom(2, 6, 0.368)
rbinom(2, 6, 0.368)
rbinom(2, 6, 0.368)
dbinom(2, 6, 0.368)
dbinom(2, 6, 0.368)
dbinom(2, 6, 0.368)
dbinom(2, 6, 0.368)
sum(log(dbinom(2, 6, 0.368)))
sum(log(dbinom(2, 6, 0.368)))
sum(log(dbinom(2, 6, 0.368)))
sum(log(dpois(x = wiwr_counts, lambda = 1)))
wiwr_counts= c(1,6)
sum(log(dpois(x = wiwr_counts, lambda = 1)))
sum(log(dbinom(2, 6, 0.368)))
sum(log(dbinom(wiwr_counts, 6, 0.368)))
set.seed(1)
vec_rnorm = rnorm(n = 10, mean = 0, sd = 1)
set.seed(1)
vec_rnorm = rnorm(n = 10, mean = 0, sd = 1)
set.seed(1)
vec_rnorm = rnorm(n = 10, mean = 0, sd = 1)
set.seed(1)
vec_rnorm = rnorm(n = 10, mean = 0, sd = 1)
log(rbinom(2, 6, 0.368))
log(rnorm(n = 10, mean = 0, sd = 1))
log(rnorm(10, mean = 0, sd = 1))
sum(log(rnorm(10, mean = 0, sd = 1)))
set.seed(1)
vec_rnorm = rnorm(n = 10, mean = 0, sd = 1)
log(rnorm(10, mean = 0, sd = 1))
set.seed(1)
vec_rnorm = rnorm(n = 10, mean = 0, sd = 1)
log(rnorm(10, mean = 0, sd = 1))
set.seed(1)
log(rnorm(10, mean = 0, sd = 1))
log(rnorm(1:10, mean = 0, sd = 1))
log(rnorm(10, mean = 0, sd = 1, na.rm= TRUE))
sum(log(dnorm(10, mean = 0, sd = 1)))
sum(log(dnorm(vec_rnorm, mean = 0, sd = 1)))
sum(log(dnorm(vec_rnorm, mean = 1, sd = 2)))
sum(log(dnorm(vec_rnorm, mean = 0.01, sd = 5)))
sum(log(dnorm(vec_rnorm, mean = 0.01, sd = 10)))
sum(log(dnorm(vec_rnorm, mean = 0.01, sd = 10)))
sum(log(dnorm(vec_rnorm, mean = 0.01, sd = 100)))
sum(log(dnorm(vec_rnorm, mean = 0.01, sd = 0.1)))
sum(log(dnorm(vec_rnorm, mean = 1, sd = 0.1)))
sum(log(dnorm(vec_rnorm, mean = 0, sd = 0.1)))
sum(log(dnorm(vec_rnorm, mean = 0, sd = 10)))
sum(log(dnorm(vec_rnorm, mean = 1, sd = 1)))
sum(log(dnorm(vec_rnorm, mean = 1, sd = 1)))
sum(log(dnorm(vec_rnorm, mean = 0, sd = 1)))
sum(log(dnorm(vec_rnorm, mean = 2, sd = 1)))
sum(log(dnorm(vec_rnorm, mean = 0.1, sd = 1)))
sum(log(dnorm(vec_rnorm, mean = 0.1, sd = 2)))
sum(log(dnorm(vec_rnorm, mean = 0.1, sd = 4)))
sum(log(dnorm(vec_rnorm, mean = 0.1, sd = 0.1)))
sum(log(dnorm(vec_rnorm, mean = 0.01, sd = 1)))
sum(log(dnorm(vec_rnorm, mean = 0.9, sd = 1)))
sum(log(dnorm(vec_rnorm, mean = 0.1, sd = 1)))
sum(log(dnorm(vec_rnorm, mean = 0.4, sd = 1)))
sum(log(dnorm(vec_rnorm, mean = 0.55, sd = 1)))
sum(log(dnorm(vec_rnorm, mean = 0.1, sd = 1)))
sum(log(dnorm(vec_rnorm, mean = 0.19, sd = 1)))
sum(log(dnorm(vec_rnorm, mean = 0.01, sd = 1)))
sum(log(dnorm(vec_rnorm, mean = 0.1, sd = 1)))
sum(log(dnorm(vec_rnorm, mean = 0.11, sd = 1)))
sum(log(dnorm(vec_rnorm, mean = 0.111, sd = 1)))
sum(log(dnorm(vec_rnorm, mean = 0.11, sd = 10)))
sum(log(dnorm(vec_rnorm, mean = 0.11, sd = 1)))
sum(log(dnorm(vec_rnorm, mean = 0.11, sd = 0.1)))
sum(log(dnorm(vec_rnorm, mean = 0.11, sd = 1)))
sum(log(dnorm(vec_rnorm, mean = 0.11111, sd = 1)))
sum(log(dnorm(vec_rnorm, mean = 0.11, sd = 1)))
sum(log(dnorm(vec_rnorm, mean = 0.11, sd = 0.1)))
sum(log(dnorm(vec_rnorm, mean = 0.11, sd = 2)))
sum(log(dnorm(vec_rnorm, mean = 0.11, sd = 1)))
sum(log(dnorm(vec_rnorm, mean = 0.04, sd = 0.5)))
sum(log(dnorm(vec_rnorm, mean = 0.04, sd = 0.05)))
sum(log(dnorm(vec_rnorm, mean = 0.04, sd = 0.3)))
sum(log(dnorm(vec_rnorm, mean = 0.04, sd = 0.03)))
like = dnorm(vec_rnorm, mean = 0, sd = 1)
sum(log(dnorm(vec_rnorm, mean = 0.04, sd = 0.03)))
sum(log(like)
log_vec = sum(log(like)
log_vec = sum(log(like))
sum(log(dnorm(vec_rnorm, mean = 0, sd = 1)))
vec_rnorm = rnorm(n = 10, mean = 5, sd = 10)
like = dnorm(vec_rnorm, 0, 2)
log_vec = sum(log(like))
log_vec
sum(log(dnorm(vec_rnorm, mean = 0, sd = 1)))
vec_rnorm = rnorm(n = 10, mean = 5, sd = 10)
like = dnorm(vec_rnorm, 0, 1)
log_vec = sum(log(like))
log_vec
vec_rnorm = rnorm(n = 10, mean = 0.04, sd = .3)
sum(log(dnorm(vec_rnorm, mean = 0, sd = 1)))
vec_rnorm = rnorm(n = 10, mean = 0.04, sd = .3)
like = dnorm(vec_rnorm, 0, 2)
log_vec = sum(log(like))
log_vec
seed_site = subset(
dat_ginkgo, select =
c("seeds_present", "site_id")
)
require(here)
dat_ginkgo = read.csv(here("data", "ginkgo_data_2022.csv"))
seed_site = subset(
dat_ginkgo, select =
c("seeds_present", "site_id")
)
trees = length(unique(seed_site$site_id))
View(seed_site)
boxplot(seed_site$seeds_present)
View(dat_ginkgo)
plot(max_depth, max_width, data= dat_ginkgo)
plot("max_depth", "max_width", data= dat_ginkgo)
plot(dat_ginkgo$max_depth, dat_ginkgo$max_width)
plot(dat_ginkgo$max_depth, dat_ginkgo$max_width,
xlab = "Max Depth",
ylab= "Max Width",
main= "Max Leaf Depth and Width")
trees$seeds_present
length(seed_site$seeds_present)
length(seed_site)
length(unique(seed_site))
length(unique(seed_site$site_id))
length(unique(seed_site))
nrow(seed_site)
nrow(length(unique(seed_site)))
nrow(length(unique(seed_site)))
nrow(unique(seed_site))
nrow(unique(seed_site))
length(unique(seed_site$seeds_present))
