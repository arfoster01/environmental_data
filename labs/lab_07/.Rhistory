n = sum(!is.na(moth_dat))
rarefaction_sampler = function(input_dat, n_iterations)
{
n_input_rows = nrow(input_dat)
results_out = matrix(
nrow = n_iterations,
ncol = n_input_rows)
# The outer loop: runs once for each bootstrap iteration.  index variable is i
for(i in 1:n_iterations)
{
# The inner loop: simulates increasing sampling intensity
# Sampling intensity ranges from 1 site to the complete count of
# sites in the input data (n)
for(j in 1:n)
{
# sample the input data row indices, with replacement
rows_j = sample(n, size = j, replace=TRUE)
# Creates a new data matrix
t1 = input_dat[rows_j, ]
# Calculates the column sums
t2 = apply(t1, 2, sum)
# Counts the number of columns in which any moths were observed
results_out[i, j] = sum(t2 > 0)
}
}
return(results_out)
}
rarefact = rarefaction_sampler(moth_dat, 100)
moths = read.csv(here("data", "moths.csv"))
moth_dat = moths[,-1]
n = sum(!is.na(moth_dat))
rarefaction_sampler = function(input_dat, n_iterations)
{
n_input_rows = nrow(input_dat)
results_out = matrix(
nrow = n_iterations,
ncol = n_input_rows)
# The outer loop: runs once for each bootstrap iteration.  index variable is i
for(i in 1:n_iterations)
{
# The inner loop: simulates increasing sampling intensity
# Sampling intensity ranges from 1 site to the complete count of
# sites in the input data (n)
for(j in 1:n)
{
# sample the input data row indices, with replacement
rows_j = sample(n, size = j, replace=TRUE)
# Creates a new data matrix
t1 = input_dat[rows_j, ]
# Calculates the column sums
t2 = apply(t1, 2, sum)
# Counts the number of columns in which any moths were observed
results_out[i, j] = sum(t2 > 0)
}
}
return(results_out)
}
rarefact = rarefaction_sampler(moth_dat, 1000)
rm(list = ls())
moths = read.csv(here("data", "moths.csv"))
moth_dat = moths[,-1]
n = sum(!is.na(moth_dat))
rarefaction_sampler = function(input_dat, n_iterations)
{
n_input_rows = nrow(input_dat)
results_out = matrix(
nrow = n_iterations,
ncol = n_input_rows)
for(i in 1:n_iterations)
{
for(j in 1:n)
{
rows_j = sample(n, size = j, replace=TRUE)
t1 = input_dat[rows_j, ]
t2 = apply(t1, 2, sum)
results_out[i, j] = sum(t2 > 0)
}
}
return(results_out)
}
rarefact = rarefaction_sampler(moth_dat, 1000)
moths = read.csv(here("data", "moths.csv"))
moth_dat = moths[,-1]
n = sum(!is.na(moth_dat))
rarefaction_sampler = function(input_dat, n_iterations)
{
n_input_rows = nrow(input_dat)
results_out = matrix(
nrow = n_iterations,
ncol = n_input_rows)
for(i in 1:n_iterations)
{
for(j in 1:n)
{
rows_j = sample(n, size = j, replace=TRUE)
t1 = input_dat[rows_j, ]
t2 = apply(t1, 2, sum)
results_out[i, j] = sum(t2 > 0)
}
}
return(results_out)
}
rarefact = rarefaction_sampler(moth_dat, 1000)
rm(list = ls())
moths = read.csv(here("data", "moths.csv"))
rarefaction_sampler = function(input_dat, n_iterations)
{
n_input_rows = nrow(input_dat)
results_out = matrix(
nrow = n_iterations,
ncol = n_input_rows)
for(i in 1:n_iterations)
{
for(j in 1:n)
{
rows_j = sample(moths, size = j, replace=TRUE)
t1 = input_dat[rows_j, ]
t2 = apply(t1, 2, sum)
results_out[i, j] = sum(t2 > 0)
}
}
return(results_out)
}
rarefact = rarefaction_sampler(moths[,-1], 100)
rm(list = ls())
moths = read.csv(here("data", "moths.csv"))
rarefaction_sampler = function(input_dat, n_iterations)
{
n_input_rows = nrow(input_dat)
results_out = matrix(
nrow = n_iterations,
ncol = n_input_rows)
for(i in 1:n_iterations)
{
for(j in 1:n)
{
rows_j = sample(moths[,-1], size = j, replace=TRUE)
t1 = input_dat[rows_j, ]
t2 = apply(t1, 2, sum)
results_out[i, j] = sum(t2 > 0)
}
}
return(results_out)
}
rarefact = rarefaction_sampler(moths[,-1], 100)
n = sum(!is.na(moths))
n = sum(!is.na(moth_dat))
moth_dat = moths[,-1]
n = sum(!is.na(moth_dat))
rm(list = ls())
moths = read.csv(here("data", "moths.csv"))
moth_dat = moths[,-1]
rarefaction_sampler = function(input_dat, n_iterations)
{
n = sum(!is.na(moth_dat))
n_input_rows = nrow(input_dat)
results_out = matrix(
nrow = n_iterations,
ncol = n_input_rows)
for(i in 1:n_iterations)
{
for(j in 1:n)
{
rows_j = sample(n, size = j, replace=TRUE)
t1 = input_dat[rows_j, ]
t2 = apply(t1, 2, sum)
results_out[i, j] = sum(t2 > 0)
}
}
return(results_out)
}
rarefact = rarefaction_sampler(moths[,-1], 100)
t2 = apply(t1, 2, sum)
t1 = input_dat[rows_j, ]
moths = read.csv(here("data", "moths.csv"))
moth_dat = moths[,-1]
rarefaction_sampler = function(input_dat, n_iterations)
{
n = sum(!is.na(moth_dat))
n_input_rows = nrow(input_dat)
results_out = matrix(
nrow = n_iterations,
ncol = n_input_rows)
for(i in 1:n_iterations)
{
for(j in 1:n)
{
rows_j = sample(n, size = j, replace=TRUE)
t1 = input_dat[rows_j, ]
t2 = apply(t1, 2, sum)
results_out[i, j] = sum(t2 > 0)
}
}
return(results_out)
}
rarefact = rarefaction_sampler(moths[,-1], 100)
moths = read.csv(here("data", "moths.csv"))
moth_dat = moths[,-1]
rarefaction_sampler = function(input_dat, n_iterations)
{
n = sum(!is.na(moth_dat))
n_input_rows = nrow(input_dat)
results_out = matrix(
nrow = n_iterations,
ncol = n_input_rows)
for(i in 1:n_iterations)
{
for(j in 1:n)
{
rows_j = sample(n, size = j, replace=TRUE)
t1 = input_dat[rows_j, ]
t2 = apply(t1, 2, sum)
results_out[i, j] = sum(t2 > 0)
}
}
return(results_out)
}
rarefact = rarefaction_sampler(moths[,-1], 100)
View(moth_dat)
View(moths)
results_out[i, j] = sum(t2 > 0)
t1 = input_dat[rows_j, ]
n_input_rows = nrow(input_dat)
rarefaction_sampler = function(input_dat, n_iterations)
n_input_rows = nrow(input_dat)
n_input_rows = nrow(input_dat)
View(rarefaction_sampler)
rarefaction_sampler = function(input_dat, n_iterations)
{
n = sum(!is.na(moth_dat))
input_dat= moth_dat
n_input_rows = nrow(input_dat)
results_out = matrix(
nrow = n_iterations,
ncol = n_input_rows)
for(i in 1:n_iterations)
{
for(j in 1:n)
{
rows_j = sample(n, size = j, replace=TRUE)
t1 = input_dat[rows_j, ]
t2 = apply(t1, 2, sum)
results_out[i, j] = sum(t2 > 0)
}
}
return(results_out)
}
rarefact = rarefaction_sampler(moths[,-1], 100)
input_dat= moth_dat
n = sum(!is.na(moth_dat))
n_input_rows = nrow(input_dat)
results_out = matrix(
nrow = n_iterations,
ncol = n_input_rows)
rm(list = ls())
moths = read.csv(here("data", "moths.csv"))
moth_dat = moths[,-1]
rarefaction_sampler = function(input_dat, n_iterations)
{
n = sum(!is.na(row(moth_dat)))
input_dat= moth_dat
n_iterations= 100
n_input_rows = nrow(input_dat)
results_out = matrix(
nrow = n_iterations,
ncol = n_input_rows)
for(i in 1:n_iterations)
{
for(j in 1:n)
{
rows_j = sample(n, size = j, replace=TRUE)
t1 = input_dat[rows_j, ]
t2 = apply(t1, 2, sum)
results_out[i, j] = sum(t2 > 0)
}
}
return(results_out)
}
rarefact = rarefaction_sampler(moths[,-1], 100)
moths = read.csv(here("data", "moths.csv"))
moth_dat = moths[,-1]
rarefaction_sampler = function(input_dat, n_iterations)
{
n = sum(!is.na(row(moth_dat)))
input_dat= moth_dat
n_iterations= 100
n_input_rows = nrow(input_dat)
results_out = matrix(
nrow = n_iterations,
ncol = n_input_rows)
for(i in 1:n_iterations)
{
for(j in 1:n)
{
rows_j = sample(n, size = j, replace=TRUE)
t1 = input_dat[rows_j, ]
t2 = apply(t1, 2, sum)
results_out[i, j] = sum(t2 > 0)
}
}
return(results_out)
}
rarefact = rarefaction_sampler(moths[,-1], 100)
n = sum(!is.na(row(moth_dat)))
input_dat= moth_dat
n_iterations= 100
n_input_rows = nrow(input_dat)
results_out = matrix(
nrow = n_iterations,
ncol = n_input_rows)
for(i in 1:n_iterations)
{
for(j in 1:n)
{
rows_j = sample(n, size = j, replace=TRUE)
t1 = input_dat[rows_j, ]
t2 = apply(t1, 2, sum)
results_out[i, j] = sum(t2 > 0)
}
}
moths = read.csv(here("data", "moths.csv"))
moth_dat = moths[,-1]
rarefaction_sampler = function(input_dat, n_iterations)
{
n = sum(!is.na(row(moth_dat)))
input_dat= moth_dat
n_iterations= 100
n_input_rows = nrow(input_dat)
results_out = matrix(
nrow = n_iterations,
ncol = n_input_rows)
for(i in 1:n_iterations)
{
for(j in 1:n)
{
rows_j = sample(n, size = j, replace=TRUE)
t1 = input_dat[rows_j, ]
t2 = apply(t1, 2, sum)
results_out[i, j] = sum(t2 > 0)
}
}
return(results_out)
}
rarefact = rarefaction_sampler(moths[,-1], 100)
rows_j = sample(n, size = j, replace=TRUE)
t1 = input_dat[rows_j, ]
t2 = apply(t1, 2, sum)
results_out[i, j] = sum(t2 > 0)
sum(t2 > 0)
t2 = apply(t1, 2, sum)
results_out[i, j] = sum(t2 > 0
results_out[i, j] = sum(t2 > 0
results_out[i, j] = sum(t2 > 0)
head(rarefact)
rarefact = rarefaction_sampler(moths[,-1], 100)
moths = read.csv(here("data", "moths.csv"))
moth_dat = moths[,-1]
rarefaction_sampler = function(input_dat, n_iterations)
{
n = sum(!is.na(row(moth_dat)))
input_dat= moth_dat
n_iterations= 100
n_input_rows = nrow(input_dat)
results_out = matrix(
nrow = n_iterations,
ncol = n_input_rows)
for(i in 1:n_iterations)
{
for(j in 1:n)
{
rows_j = sample(n, size = j, replace=TRUE)
t1 = input_dat[rows_j, ]
t2 = apply(t1, 2, sum)
results_out[i, j] = sum(t2 > 0)
}
}
return(results_out)
}
rarefact = rarefaction_sampler(moths[,-1], 100)
rows_j = sample(n, size = j, replace=TRUE)
t1 = input_dat[rows_j, ]
t2 = apply(t1, 2, sum)
results_out[i, j] = sum(t2 > 0)
size = j
results_out[i, j] = sum(t2 > 0)
t1 = input_dat[rows_j, ]
t2 = apply(t1, 2, sum)
results_out[i, j] = sum(t2 > 0)
moths = read.csv(here("data", "moths.csv"))
moth_dat = moths[,-1]
rarefaction_sampler = function(input_dat, n_iterations)
{
n = sum(!is.na(row(moth_dat)))
input_dat= moth_dat
n_iterations= 100
n_input_rows = nrow(input_dat)
results_out = matrix(
nrow = n_iterations,
ncol = n_input_rows)
for(i in 1:n_iterations)
{
for(j in 1:n)
{
rows_j = sample(n, size = j, replace=TRUE)
t1 = input_dat[rows_j, ]
t2 = apply(t1, 2, sum)
results_out[i, j] = sum(t2 > 0)
}
}
return(results_out)
}
rarefact = rarefaction_sampler(moths[,-1], 100)
results_out(i, j) = sum(t2 > 0)
results_out[i, j] = sum(t2 > 0)
results_out{i, j} = sum(t2 > 0)
results_out(i, j) = sum(t2 > 0)
results_out i, j  = sum(t2 > 0)
results_out= sum(t2 > 0)
moths = read.csv(here("data", "moths.csv"))
moth_dat = moths[,-1]
rarefaction_sampler = function(input_dat, n_iterations)
{
n = sum(!is.na(row(moth_dat)))
input_dat= moth_dat
n_iterations= 100
n_input_rows = nrow(input_dat)
results_out = matrix(
nrow = n_iterations,
ncol = n_input_rows)
for(i in 1:n_iterations)
{
for(j in 1:n)
{
rows_j = sample(n, size = j, replace=TRUE)
t1 = input_dat[rows_j, ]
t2 = apply(t1, 2, sum)
results_out= sum(t2 > 0)
}
}
return(results_out)
}
rarefact = rarefaction_sampler(moths[,-1], 100)
head(rarefact)
moths = read.csv(here("data", "moths.csv"))
moth_dat = moths[,-1]
rarefaction_sampler = function(input_dat, n_iterations)
{
n = sum(!is.na(row(moth_dat)))
input_dat= moth_dat
n_iterations= 100
n_input_rows = nrow(input_dat)
results_out = matrix(
nrow = n_iterations,
ncol = n_input_rows)
for(i in 1:n_iterations)
{
for(j in 1:n)
{
rows_j = sample(n, size = j, replace=TRUE)
t1 = input_dat[rows_j, ]
t2 = apply(t1, 2, sum)
results_out= sum(t2 > 0)
}
}
return(results_out)
}
rarefact = rarefaction_sampler(moths[,-1], 100)
head(rarefact)
head(rarefact)
head(rarefact)
moths = read.csv(here("data", "moths.csv"))
rarefact = rarefaction_sampler(moths[,-1], 10000)
moths = read.csv(here("data", "moths.csv"))
rarefact = rarefaction_sampler(moths[,-1], 10000)
rare_mean = apply(rarefact, 2, mean)
matplot(
rare,
type='l',
xlab='Number of sampling plots',
ylab='Species richness',
main="Mike's Awesome Rarefaction Curve")
rare = t(rbind(rare_mean, rare_quant))
rare_mean = apply(rarefact, 2, mean)
rare_mean = apply(rarefact, 2, mean)
moths = read.csv(here("data", "moths.csv"))
rarefact = rarefaction_sampler(moths[,-1], 10000)
rare_mean = apply(rarefact, 10, mean)
rarefact = rarefaction_sampler(moths[,-1], 10000)
rare_mean = apply(rarefact, 1000, mean)
moths = read.csv(here("data", "moths.csv"))
rarefact = rarefaction_sampler(moths[,-1], 10000)
View(rarefaction_sampler)
rare_mean = apply(rarefact, 2, mean)
matplot(
rare,
type='l',
xlab='Number of sampling plots',
ylab='Species richness',
main="Mike's Awesome Rarefaction Curve")
rare = t(rbind(rare_mean, rare_quant))
rare_mean = apply(rarefact, 2, mean)
rare_mean = apply(rarefact, mean)
rare_mean = apply(rarefact, 2, mean)
rare_mean = apply(rarefact, 10, mean)
rare_mean = apply(rarefact, 24, mean)
rare_mean = apply(rarefact, 2, mean)
rarefact = rarefaction_sampler(moths[,2], 10000)
rare_mean = apply(rarefact, 2, mean)
moths = read.csv(here("data", "moths.csv"))
rarefact = rarefaction_sampler(moths[,2], 10000)
rare_mean = apply(rarefact, 2, mean)
rare_mean = apply(rarefact, 2, mean)
