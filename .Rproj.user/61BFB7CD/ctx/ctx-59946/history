x = rnorm(adelie_dat$flipper_length_mm)
y = rnorm(chinstrap_dat$flipper_length_mm)
pen_boot= two.boot(x,
y,
data= no_gentoo,
FUN = mean,
R = 10000,
na.rm= TRUE)
str(pen_boot)
str(pen_boot)
pen_boot= two.boot(x,
y,
data= no_gentoo,
FUN = mean,
R = 10000,
na.rm= TRUE)
str(pen_boot)
x = rnorm(adelie_dat$flipper_length_mm)
y = rnorm(chinstrap_dat$flipper_length_mm)
pen_boot= two.boot(x,
y,
data= no_gentoo,
FUN = mean,
R = 10000,
na.rm= TRUE)
str(pen_boot)
x = rnorm(adelie_dat$flipper_length_mm)
y = rnorm(chinstrap_dat$flipper_length_mm)
pen_boot= two.boot(x,
y,
data= no_gentoo,
FUN = mean,
R = 10000,
na.rm= TRUE)
str(pen_boot)
x = rnorm(adelie_dat)
y = rnorm(chinstrap_dat)
pen_boot= two.boot(x,
y,
data= no_gentoo,
FUN = mean,
R = 10000,
na.rm= TRUE)
str(pen_boot)
pen_boot$t
hist(pen_boot$t)
x = rnorm(adelie_dat$flipper_length_mm)
y = rnorm(chinstrap_dat$flipper_length_mm)
pen_boot= two.boot(x,
y,
data= no_gentoo,
FUN = mean,
R = 10000,
na.rm= TRUE)
str(pen_boot)
hist(pen_boot$t)
quantile(pen_boot)
quantile(pen_boot$t)
mean(pen_boot$t)
median(pen_boot$t)
median(pen_boot$t)
mean(pen_boot$t)
quantile(pen_boot$t)
hist(pen_boot$t, main= "Histogram of 10000")
hist(pen_boot$t,
main= "Histogram of 10000 bootstrap differences in mean flipper length",
xlab= "Difference in mean flipper length (mm)")
hist(pen_boot$t,
main= "Histogram of 10000 bootstrap replicates of the differences in mean flipper length",
xlab= "Difference in mean flipper length (mm)")
hist(pen_boot$t,
main= "Histogram of 10000 bootstrap replicates
of the differences in mean flipper length",
xlab= "Difference in mean flipper length (mm)")
sd(pen_boot$t)
quantile(pen_boot$t, 0.95)
quantile(pen_boot$t, 0.95)
mean(pen_boot$t)
median(pen_boot$t)
sd(pen_boot$t)
quantile(pen_boot$t, c(0.025, 0.975))
quantile(pen_boot$t, c(0.05, 0.95))
quantile(pen_boot$t, c(0.025, 0.975))
ecdf(pen_boot)
ecdf(pen_boot$t)
pen_ecdf =
ecdf(pen_boot$t)
ecdf(pen_boot$t)
pen_ecdf =
ecdf(pen_boot)
pen_ecdf <- ecdf(pen_boot())
pen_ecdf <- pen_boot(ecdf())
pen_ecdf = fun(pen_boot(ecdf(x)))
pen_ecdf = function(pen_boot(ecdf(x)))
pen_ecdf = function(ecdf(pen_boot(x)))
pen_ecdf = function(ecdf(x))
pen_ecdf = ecdf(x)
pen_ecdf <- ecdf(x)
pen_ecdf(pen_boot, 4.5)
pen_ecdf(pen_boot, -4.5>v)
pen_ecdf(-4.5 > pen_boot)
pen_ecdf(-4.5>pen_boot)
pen_ecdf <- ecdf(pen_boot)
ecdf(pen_boot)
ecdf(pen_boot)
pen_ecdf <- ecdf(pen_boot(x))
pen_boot= two.boot(x,
y,
data= no_gentoo,
FUN = mean,
R = 10000,
na.rm= TRUE)
pen_ecdf <- ecdf(pen_boot)
pen_ecdf <- ecdf(x)
pen_ecdf(-4.5>pen_boot)
pen_ecdf(-4.5)
pen_ecdf(-4.5>0)
pen_ecdf(-4.5>0)
pen_boot(ecdf(x))
pen_ecdf <- plot(ecdf(pen_boot$t)
pen_ecdf(-4.5)
plot(ecdf(pen_boot$t)
plot(ecdf(pen_boot$t)
plot(ecdf(pen_boot$t))
pen_ecdf <- plot(ecdf(pen_boot$t))
pen_ecdf(-4.5)
pen_ecdf <- plot(ecdf(pen_boot$t))
pen_ecdf(-4.5)
pen_ecdf(-4.5)
pen_ecdf(x) <- plot(ecdf(pen_boot$t))
ecdf(pen_boot$t)
pen_ecdf <- function(ecdf(pen_boot$t))
function = ecdf(pen_boot$t))
function ecdf(pen_boot$t))
pen_ecdf <- ecdf(pen_boot$t)
pen_ecdf(-4.5)
pen_ecdf(6)
pen_ecdf(20)
hist(pen_boot$t,
main= "Histogram of 10000 bootstrap replicates
of the differences in mean flipper length",
xlab= "Difference in mean flipper length (mm)")
pen_ecdf <- ecdf(pen_boot$t)
pen_ecdf(-4.5)
pen_ecdf(-5)
pen_ecdf(5)
pnorm(-4.5)
ecdf(pen_boot)
pen_ecdf <- ecdf(pen_boot$t)
pen_ecdf(-4.5)
pen_ecdf(>=-4.5)
pen_ecdf(>= -4.5)
pen_ecdf(pen_boot$t>= -4.5)
pen_ecdf(pen_boot$t >= -4.5)
pen_ecdf(pen_boot$t >= -8)
pen_ecdf(pen_boot$t <= -8)
head(veg_dat)
View(veg_dat)
no_removed = na.omit(droplevels(
subset(veg_dat, treatment != "removed")))
View(no_removed)
control_clipped = na.omit(droplevels(
subset( no_removed, treatment != "mixed")))
View(control_clipped)
wilcox.test(control_clipped$pine)
wilcox.test(control_clipped$pine, na.rm= TRUE)
p= control ~ pine, data= control_clipped
p= control ~ pine data= control_clipped
p= c(control ~ pine, data= control_clipped)
View(p)
q= c(clipped ~ pine, data= control_clipped)
tree_boot= two.boot(p, q, data=control_clipped,
FUN = mean,
R = 10000,
na.rm= TRUE)
tree_boot= two.boot(control ~ pine, clipped ~ pine,
data=control_clipped,
FUN = mean,
R = 10000,
na.rm= TRUE)
control_clipped_no_fern = na.omit(droplevels(
subset( control_clipped, != "fern")))
control_clipped_no_fern = na.omit(droplevels(
control_clipped, != "fern"))
p= rnorm(control ~ pine, data= control_clipped)
p= rnorm(control ~ pine, control_clipped)
control= subset(control_clipped, treatment== "control")
View(control)
clipped= subset(control_clipped, treatment== "clipped")
View(clipped)
p= rnorm(control$pine)
q= rnorm(clipped$pine)
tree_boot= two.boot(p, q,
FUN = mean,
R = 10000,
na.rm= TRUE)
quantile(tree_boot$t, c(0.025, 0.975))
boot.ci(tree_boot)
require(boot.ci)
boot.ci()
library(boot)
boot.ci(tree_boot)
quantile(tree_boot$t, c(0.025, 0.975))
sd(tree_boot$t)
dat_all = merge(
bird_dat,
hab_dat,
by = c("basin", "sub"))
head(dat_all[, c("b.sidi", "s.sidi")])
View(no_removed)
View(dat_all)
b_sidi_mean = mean(dat_all$b.sidi, na.rm = TRUE)
b_sidi_sd   = sd(dat_all$b.sidi, na.rm = TRUE)
dat_all$b.sidi.standardized =
(dat_all$b.sidi - b_sidi_mean)/b_sidi_sd
View(dat_all)
s_sidi_mean = mean(dat_all$s.sidi, na.rm = TRUE)
s_sidi_sd   = sd(dat_all$s.sidi, na.rm = TRUE)
dat_all$s.sidi.standardized = (dat_all$s.sidi - s_sidi_mean)/s_sidi_sd
mean(dat_all$b.sidi.standardized)
sd(dat_all$b.sidi.standardized)
mean(dat_all$s.sidi.standardized)
sd(dat_all$s.sidi.standardized)
m=10000
result_mc= numeric(m)
for(i in 1:m)
{
index_1 = sample(...,,)
# ... your loop code ...
result_mc[i] = coef(fit_resampled_i)[2]
}
lm(dat_all)
lm(dat_all$b.sidi.standardized)
lm(formula= b.sidi.standardized~ s.sidi.standardized, data= dat_all)
for(i in 1:m)
{
index_1 = sample(dat_all)
slope_observed= lm(formula= b.sidi.standardized~ s.sidi.standardized,
data= dat_all)
result_mc[i] = coef(fit_resampled_i)[2]
}
set.seed(123)
index_1 = sample(nrow(dat_1), replace = TRUE)
fit_1 = lm(b.sidi ~ s.sidi, data = dat_all)
coef(fit_1)
set.seed(123)
index_1 = sample(nrow(dat_1), replace = TRUE)
fit_1 = lm(b.sidi ~ s.sidi, data = dat_all)
coef(fit_1)
slope_observed = coef(fit_1)[2]
dat_1 =
subset(
dat_all,
select = c(b.sidi, s.sidi))
set.seed(123)
index_1 = sample(nrow(dat_1), replace = TRUE)
index_2 = sample(nrow(dat_1), replace = TRUE)
dat_resampled_i =
data.frame(
b.sidi = dat_1$b.sidi[index_1],
s.sidi = dat_1$s.sidi[index_2]
)
fit_resampled_i = lm(b.sidi ~ s.sidi, data = dat_resampled_i)
slope_resampled_i = coef(fit_resampled_i)[2]
print(slope_resampled_i)
print(slope_resampled_i)
for(i in 1:m)
{
index_1 = sample(nrow(dat_1), replace = TRUE)
index_2 = sample(nrow(dat_1), replace = TRUE)
dat_resampled_i =
data.frame(
b.sidi = dat_1$b.sidi[index_1],
s.sidi = dat_1$s.sidi[index_2]
)
fit_resampled_i = lm(b.sidi ~ s.sidi, data = dat_resampled_i)
slope_resampled_i = coef(fit_resampled_i)[2]
slope_observed = coef(fit_1)[2]
result_mc[i] = coef(fit_resampled_i)[2]
}
hist(
result_mc,
main = "Null Distribution of Regression Slope",
xlab = "Slope Parameter")
abline(v = slope_observed, lty = 2, col = "red", lwd = 2)
hist(
result_mc,
main = "Null Distribution of Regression Slope",
xlab = "Slope Parameter")
abline(v = slope_observed, lty = 1, col = "blue", lwd = 2)
quantile(result_mc, c(.05))
hist(
result_mc,
main = "Null Distribution of Regression Slope",
xlab = "Slope Parameter")
abline(v = slope_observed, lty = 1, col = "blue", lwd = 2)
abline(v= quantile(result_mc, c(.05)), lty = 2, col = "red", lwd = 2)
set.seed(345)
index_1 = sample(nrow(dat_1), replace = TRUE)
dat_boot = dat_1[index_1, ]
head(dat_boot)
fit_bs1 = lm(b.sidi ~ s.sidi, data = dat_boot)
coef(fit_bs1)
hist(
result_boot,
main = "Mike's Alternative Distribution of Regression Slope",
xlab = "Slope Parameter")
m=10000
result_mc= numeric(m)
for(i in 1:m)
{
index_1 = sample(nrow(dat_1), replace = TRUE)
dat_boot = dat_1[index_1, ]
fit_bs1 = lm(b.sidi ~ s.sidi, data = dat_boot)
slope_observed = coef(fit_bs1)[2]
result_boot[i] = coef(fit_bs1)[2]
}
m=10000
result_mc= numeric(m)
for(i in 1:m)
{
index_1 = sample(nrow(dat_1), replace = TRUE)
dat_boot = dat_1[index_1, ]
fit_bs1 = lm(b.sidi ~ s.sidi, data = dat_boot)
slope_observed = coef(fit_bs1)[2]
result_boot = coef(fit_bs1)[2]
}
hist(
result_boot,
main = "Mike's Alternative Distribution of Regression Slope",
xlab = "Slope Parameter")
abline(v = slope_observed, lty = 2, col = "red", lwd = 2)
abline(v = 0, lty = 2, col = 1, lwd = 2)
for(i in 1:m)
{
index_1 = sample(nrow(dat_1), replace = TRUE)
index_2 = sample(nrow(dat_1), replace = TRUE)
dat_boot =  data.frame(
b.sidi = dat_1$b.sidi[index_1],
s.sidi = dat_1$s.sidi[index_2]
)
fit_bs1 = lm(b.sidi ~ s.sidi, data = dat_boot)
slope_observed = coef(fit_bs1)[2]
result_boot = coef(fit_bs1)[2]
}
hist(
result_boot,
main = "Alternative Distribution of Regression Slope",
xlab = "Slope Parameter")
abline(v = slope_observed, lty = 2, col = "red", lwd = 2)
abline(v = 0, lty = 2, col = 1, lwd = 2)
for(i in 1:m)
{
index_1 = sample(nrow(dat_1), replace = TRUE)
index_2 = sample(nrow(dat_1), replace = TRUE)
dat_boot =  data.frame(
b.sidi = dat_1$b.sidi[index_1],
s.sidi = dat_1$s.sidi[index_2]
)
fit_bs1 = lm(b.sidi ~ s.sidi, data = dat_boot)
slope_resampled_i = coef(fit_bs1)[2]
slope_observed = coef(fit_1)[2]
result_boot = coef(fit_bs1)[2]
}
hist(
result_boot,
main = "Alternative Distribution of Regression Slope",
xlab = "Slope Parameter")
abline(v = slope_observed, lty = 2, col = "red", lwd = 2)
abline(v = 0, lty = 2, col = 1, lwd = 2)
set.seed(345)
index_1 = sample(nrow(dat_1), replace = TRUE)
dat_boot = dat_1[index_1, ]
head(dat_boot)
fit_bs1 = lm(b.sidi ~ s.sidi, data = dat_boot)
coef(fit_bs1)
m=10000
result_mc= numeric(m)
for(i in 1:m)
{
index_1 = sample(nrow(dat_1), replace = TRUE)
index_2 = sample(nrow(dat_1), replace = TRUE)
dat_boot =  data.frame(
b.sidi = dat_1$b.sidi[index_1],
s.sidi = dat_1$s.sidi[index_2]
)
fit_bs1 = lm(b.sidi ~ s.sidi, data = dat_boot)
slope_resampled_i = coef(fit_bs1)[2]
slope_observed = coef(fit_1)[2]
result_boot = coef(fit_bs1)[2]
}
hist(
result_boot,
main = "Alternative Distribution of Regression Slope",
xlab = "Slope Parameter")
abline(v = slope_observed, lty = 2, col = "red", lwd = 2)
abline(v = 0, lty = 2, col = 1, lwd = 2)
set.seed(345)
index_1 = sample(nrow(dat_1), replace = TRUE)
fit_1 = lm(b.sidi ~ s.sidi, data = dat_all)
require(here)
veg_dat = read.csv(here("data", "vegdata.csv"))
bird_dat = read.csv(here("data", "bird.sub.csv"))
hab_dat = read.csv(here("data", "hab.sub.csv"))
install.packages("palmerpenguins")
install.packages("here")
require(palmerpenguins)
require(here)
penguins = data.frame(penguins)
no_gentoo = na.omit(droplevels(
subset(penguins, species != "Gentoo")))
t.test(flipper_length_mm ~ species, data = no_gentoo, alternative = "less")
install.packages("boot")
library(boot)
require(simpleboot)
require(here)
adelie_dat= na.omit(droplevels(
subset(no_gentoo, species != "Chinstrap")))
chinstrap_dat= na.omit(droplevels(
subset(no_gentoo, species != "Adelie")))
x = rnorm(adelie_dat$flipper_length_mm)
y = rnorm(chinstrap_dat$flipper_length_mm)
pen_boot= two.boot(x,
y,
data= no_gentoo,
FUN = mean,
R = 10000,
na.rm= TRUE)
str(pen_boot)
hist(pen_boot$t,
main= "Histogram of 10000 bootstrap replicates
of the differences in mean flipper length",
xlab= "Difference in mean flipper length (mm)")
quantile(pen_boot$t, c(0.025, 0.975))
mean(pen_boot$t)
median(pen_boot$t)
sd(pen_boot$t)
#     Questions 5-7
pen_ecdf <- ecdf(pen_boot$t)
pen_ecdf(pen_boot$t >= -4.5)
pen_ecdf(pen_boot$t <= -8)
#     Question 9
head(veg_dat)
no_removed = na.omit(droplevels(
subset(veg_dat, treatment != "removed")))
control_clipped = na.omit(droplevels(
subset( no_removed, treatment != "mixed")))
wilcox.test(control_clipped$pine, na.rm= TRUE)
#     Question 10 and 11
control= subset(control_clipped, treatment== "control")
clipped= subset(control_clipped, treatment== "clipped")
p= rnorm(control$pine)
q= rnorm(clipped$pine)
tree_boot= two.boot(p, q,
FUN = mean,
R = 10000,
na.rm= TRUE)
quantile(tree_boot$t, c(0.025, 0.975))
boot.ci(tree_boot)
quantile(tree_boot$t, c(0.025, 0.975))
#     Question 12/13
dat_all = merge(
bird_dat,
hab_dat,
by = c("basin", "sub"))
head(dat_all[, c("b.sidi", "s.sidi")])
b_sidi_mean = mean(dat_all$b.sidi, na.rm = TRUE)
b_sidi_sd   = sd(dat_all$b.sidi, na.rm = TRUE)
dat_all$b.sidi.standardized =
(dat_all$b.sidi - b_sidi_mean)/b_sidi_sd
mean(dat_all$b.sidi.standardized)
sd(dat_all$b.sidi.standardized)
s_sidi_mean = mean(dat_all$s.sidi, na.rm = TRUE)
s_sidi_sd   = sd(dat_all$s.sidi, na.rm = TRUE)
dat_all$s.sidi.standardized = (dat_all$s.sidi - s_sidi_mean)/s_sidi_sd
mean(dat_all$s.sidi.standardized)
sd(dat_all$s.sidi.standardized)
#     Question 14 and 15
fit_1 = lm(b.sidi ~ s.sidi, data = dat_all)
coef(fit_1)
slope_observed = coef(fit_1)[2]
dat_1 =
subset(
dat_all,
select = c(b.sidi, s.sidi))
set.seed(123)
index_1 = sample(nrow(dat_1), replace = TRUE)
index_2 = sample(nrow(dat_1), replace = TRUE)
dat_resampled_i =
data.frame(
b.sidi = dat_1$b.sidi[index_1],
s.sidi = dat_1$s.sidi[index_2]
)
fit_resampled_i = lm(b.sidi ~ s.sidi, data = dat_resampled_i)
slope_resampled_i = coef(fit_resampled_i)[2]
print(slope_resampled_i)
m=10000
result_mc= numeric(m)
for(i in 1:m)
{
index_1 = sample(nrow(dat_1), replace = TRUE)
index_2 = sample(nrow(dat_1), replace = TRUE)
dat_resampled_i =
data.frame(
b.sidi = dat_1$b.sidi[index_1],
s.sidi = dat_1$s.sidi[index_2]
)
fit_resampled_i = lm(b.sidi ~ s.sidi, data = dat_resampled_i)
slope_resampled_i = coef(fit_resampled_i)[2]
slope_observed = coef(fit_1)[2]
result_mc[i] = coef(fit_resampled_i)[2]
}
